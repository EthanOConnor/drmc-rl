//Aim for reward magnitudes where a clear is single-digits to tens, not hundreds; keep step penalties tiny and consistent:
//	•	Per-step time penalty ≈ −0.01 to −0.02.
//	•	Virus clear bonus ≈ +1.0 each (or +2 for 2-virus clear).
//	•	Level clear terminal bonus ≈ +5 (not 500).
//	•	Potential shaping scale kappa → tune so |r_shape| ≈ 10–30% of |r_env| on average (log and watch the ratio).
//If your current rewards are in the hundreds, down-scale them; big magnitudes + REINFORCE = noisy gradients and slow improvement.

{
  "pill_place_base": {
    "value": 0.2,
    "description": "Base reward applied to the first pill lock; later locks scale via the exponential curve."
  },
  "pill_place_growth": {
    "value": 0.0008,
    "description": "Per-placement growth rate (a) for the quadratic pill lock reward: reward = base * (1 + a*(n-1)^2)."
  },
  "virus_clear_bonus": {
    "value": 0.0,
    "description": "Reward applied per virus cleared in a single step."
  },
  "non_virus_clear_bonus": {
    "value": 0.0,
    "description": "Reward applied for clearing non-virus tiles alongside a placement."
  },
  "terminal_clear_bonus": {
    "value": 10.0,
    "description": "Bonus awarded when the stage is cleared."
  },
  "topout_penalty": {
    "value": 0,
    "description": "Penalty applied if the player tops out."
  },
  "time_bonus_topout_per_60_frames": {
    "value": 0,
    "description": "Additional reward per in-game second elapsed when top-out occurs."
  },
  "time_penalty_clear_per_60_frames": {
    "value": 0.0,
    "description": "Penalty per in-game second elapsed on successful clears (encourages faster runs)."
  },
  "adjacency_pair_bonus": {
    "value": 0,
    "description": "Reward for creating a new adjacent pair alignment that could enable future clears."
  },
  "adjacency_triplet_bonus": {
    "value": 0,
    "description": "Reward for creating a longer adjacency (three aligned segments)."
  },
  "column_height_penalty": {
    "value": 0.0,
    "description": "Penalty weight applied to tall stacks relative to the virus band."
  },
  "action_penalty_scale": {
    "value": 0.0,
    "description": "Multiplier for the per-step action penalty relative to the most recent placement bonus."
  },
  "placement_height_threshold": {
    "value": 3.0,
    "description": "Row gap above the highest remaining virus before a placement is considered too high."
  },
  "placement_height_penalty_multiplier": {
    "value": -2.0,
    "description": "Multiplier applied to the pill placement bonus when the high-placement penalty is triggered."
  },
  "punish_high_placements": {
    "value": true,
    "description": "If false, disables the heuristic that penalizes pills locked well above the virus band."
  }
}
